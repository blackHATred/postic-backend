// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: upload-service.proto

package uploadservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadFileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // для продолжения загрузки (опционально)
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	FileType      string                 `protobuf:"bytes,4,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	UserId        int32                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FileName      string                 `protobuf:"bytes,6,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileChunk) Reset() {
	*x = UploadFileChunk{}
	mi := &file_upload_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileChunk) ProtoMessage() {}

func (x *UploadFileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_upload_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileChunk.ProtoReflect.Descriptor instead.
func (*UploadFileChunk) Descriptor() ([]byte, []int) {
	return file_upload_service_proto_rawDescGZIP(), []int{0}
}

func (x *UploadFileChunk) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UploadFileChunk) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *UploadFileChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadFileChunk) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *UploadFileChunk) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UploadFileChunk) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type UploadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileResponse) Reset() {
	*x = UploadFileResponse{}
	mi := &file_upload_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResponse) ProtoMessage() {}

func (x *UploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_upload_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResponse.ProtoReflect.Descriptor instead.
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return file_upload_service_proto_rawDescGZIP(), []int{1}
}

func (x *UploadFileResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UploadFileResponse) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type DownloadChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Length        int64                  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadChunkRequest) Reset() {
	*x = DownloadChunkRequest{}
	mi := &file_upload_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadChunkRequest) ProtoMessage() {}

func (x *DownloadChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadChunkRequest.ProtoReflect.Descriptor instead.
func (*DownloadChunkRequest) Descriptor() ([]byte, []int) {
	return file_upload_service_proto_rawDescGZIP(), []int{2}
}

func (x *DownloadChunkRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DownloadChunkRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DownloadChunkRequest) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type DownloadChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	TotalSize     int64                  `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadChunkResponse) Reset() {
	*x = DownloadChunkResponse{}
	mi := &file_upload_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadChunkResponse) ProtoMessage() {}

func (x *DownloadChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_upload_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadChunkResponse.ProtoReflect.Descriptor instead.
func (*DownloadChunkResponse) Descriptor() ([]byte, []int) {
	return file_upload_service_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadChunkResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DownloadChunkResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DownloadChunkResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type GetUploadInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUploadInfoRequest) Reset() {
	*x = GetUploadInfoRequest{}
	mi := &file_upload_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUploadInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadInfoRequest) ProtoMessage() {}

func (x *GetUploadInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUploadInfoRequest) Descriptor() ([]byte, []int) {
	return file_upload_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetUploadInfoRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUploadInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	FileType      string                 `protobuf:"bytes,3,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	UserId        int32                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Size          int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUploadInfoResponse) Reset() {
	*x = GetUploadInfoResponse{}
	mi := &file_upload_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUploadInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadInfoResponse) ProtoMessage() {}

func (x *GetUploadInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_upload_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUploadInfoResponse) Descriptor() ([]byte, []int) {
	return file_upload_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetUploadInfoResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUploadInfoResponse) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *GetUploadInfoResponse) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *GetUploadInfoResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUploadInfoResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetUploadInfoResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type DeleteUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUploadRequest) Reset() {
	*x = DeleteUploadRequest{}
	mi := &file_upload_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUploadRequest) ProtoMessage() {}

func (x *DeleteUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUploadRequest.ProtoReflect.Descriptor instead.
func (*DeleteUploadRequest) Descriptor() ([]byte, []int) {
	return file_upload_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteUploadRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUploadResponse) Reset() {
	*x = DeleteUploadResponse{}
	mi := &file_upload_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUploadResponse) ProtoMessage() {}

func (x *DeleteUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_upload_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUploadResponse.ProtoReflect.Descriptor instead.
func (*DeleteUploadResponse) Descriptor() ([]byte, []int) {
	return file_upload_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteUploadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_upload_service_proto protoreflect.FileDescriptor

const file_upload_service_proto_rawDesc = "" +
	"\n" +
	"\x14upload-service.proto\x12\ruploadservice\"\xa0\x01\n" +
	"\x0fUploadFileChunk\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12\x1b\n" +
	"\tfile_type\x18\x04 \x01(\tR\bfileType\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x05R\x06userId\x12\x1b\n" +
	"\tfile_name\x18\x06 \x01(\tR\bfileName\"A\n" +
	"\x12UploadFileResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1b\n" +
	"\tfile_path\x18\x02 \x01(\tR\bfilePath\"V\n" +
	"\x14DownloadChunkRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x16\n" +
	"\x06length\x18\x03 \x01(\x03R\x06length\"b\n" +
	"\x15DownloadChunkResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x03R\ttotalSize\"&\n" +
	"\x14GetUploadInfoRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xad\x01\n" +
	"\x15GetUploadInfoResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1b\n" +
	"\tfile_path\x18\x02 \x01(\tR\bfilePath\x12\x1b\n" +
	"\tfile_type\x18\x03 \x01(\tR\bfileType\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\x05R\x06userId\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x03R\x04size\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\tR\tcreatedAt\"%\n" +
	"\x13DeleteUploadRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"0\n" +
	"\x14DeleteUploadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xf3\x02\n" +
	"\rUploadService\x12Q\n" +
	"\n" +
	"UploadFile\x12\x1e.uploadservice.UploadFileChunk\x1a!.uploadservice.UploadFileResponse(\x01\x12Z\n" +
	"\rDownloadChunk\x12#.uploadservice.DownloadChunkRequest\x1a$.uploadservice.DownloadChunkResponse\x12Z\n" +
	"\rGetUploadInfo\x12#.uploadservice.GetUploadInfoRequest\x1a$.uploadservice.GetUploadInfoResponse\x12W\n" +
	"\fDeleteUpload\x12\".uploadservice.DeleteUploadRequest\x1a#.uploadservice.DeleteUploadResponseB\x12Z\x10./;uploadserviceb\x06proto3"

var (
	file_upload_service_proto_rawDescOnce sync.Once
	file_upload_service_proto_rawDescData []byte
)

func file_upload_service_proto_rawDescGZIP() []byte {
	file_upload_service_proto_rawDescOnce.Do(func() {
		file_upload_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_upload_service_proto_rawDesc), len(file_upload_service_proto_rawDesc)))
	})
	return file_upload_service_proto_rawDescData
}

var file_upload_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_upload_service_proto_goTypes = []any{
	(*UploadFileChunk)(nil),       // 0: uploadservice.UploadFileChunk
	(*UploadFileResponse)(nil),    // 1: uploadservice.UploadFileResponse
	(*DownloadChunkRequest)(nil),  // 2: uploadservice.DownloadChunkRequest
	(*DownloadChunkResponse)(nil), // 3: uploadservice.DownloadChunkResponse
	(*GetUploadInfoRequest)(nil),  // 4: uploadservice.GetUploadInfoRequest
	(*GetUploadInfoResponse)(nil), // 5: uploadservice.GetUploadInfoResponse
	(*DeleteUploadRequest)(nil),   // 6: uploadservice.DeleteUploadRequest
	(*DeleteUploadResponse)(nil),  // 7: uploadservice.DeleteUploadResponse
}
var file_upload_service_proto_depIdxs = []int32{
	0, // 0: uploadservice.UploadService.UploadFile:input_type -> uploadservice.UploadFileChunk
	2, // 1: uploadservice.UploadService.DownloadChunk:input_type -> uploadservice.DownloadChunkRequest
	4, // 2: uploadservice.UploadService.GetUploadInfo:input_type -> uploadservice.GetUploadInfoRequest
	6, // 3: uploadservice.UploadService.DeleteUpload:input_type -> uploadservice.DeleteUploadRequest
	1, // 4: uploadservice.UploadService.UploadFile:output_type -> uploadservice.UploadFileResponse
	3, // 5: uploadservice.UploadService.DownloadChunk:output_type -> uploadservice.DownloadChunkResponse
	5, // 6: uploadservice.UploadService.GetUploadInfo:output_type -> uploadservice.GetUploadInfoResponse
	7, // 7: uploadservice.UploadService.DeleteUpload:output_type -> uploadservice.DeleteUploadResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_upload_service_proto_init() }
func file_upload_service_proto_init() {
	if File_upload_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_upload_service_proto_rawDesc), len(file_upload_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_upload_service_proto_goTypes,
		DependencyIndexes: file_upload_service_proto_depIdxs,
		MessageInfos:      file_upload_service_proto_msgTypes,
	}.Build()
	File_upload_service_proto = out.File
	file_upload_service_proto_goTypes = nil
	file_upload_service_proto_depIdxs = nil
}
