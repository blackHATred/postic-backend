apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: postic
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      imagePullSecrets:
      - name: ghcr-secret
      containers:
        - name: gateway
          image: ghcr.io/blackhatred/postic-gateway:latest
          ports:
          - containerPort: 80
            name: http
          env:
            - name: DB_CONNECT_DSN
              valueFrom:
                secretKeyRef:
                  name: cockroachdb-secret
                  key: db-connect-dsn
            - name: TELEGRAM_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: telegram-bot-secret
                  key: TELEGRAM_BOT_TOKEN
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_SECRET
            - name: MINIO_ENDPOINT
              value: "minio.minio.svc.cluster.local:9000"
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: minio-user
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: minio-password
            - name: MINIO_USE_SSL
              value: "false"
            - name: CORS_ORIGIN
              value: "https://postic.io"
            - name: SUMMARIZE_URL
              value: "http://postic-ml-service.postic-ml.svc.cluster.local:8000/sum"
            - name: REPLY_IDEAS_URL
              value: "http://postic-ml-service.postic-ml.svc.cluster.local:8000/ans"
            - name: GENERATE_POST_URL
              value: "http://postic-ml-service.postic-ml.svc.cluster.local:8000/publication/stream"
            - name: FIX_POST_TEXT_URL
              value: "http://postic-ml-service.postic-ml.svc.cluster.local:8000/fix"
            - name: VK_FRONTEND_SUCCESS_REDIRECT_URL
              value: "https://postic.io/teams"
            - name: VK_FRONTEND_ERROR_REDIRECT_URL
              value: "https://postic.io/login"
            - name: KAFKA_BROKERS
              value: "kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092"
            - name: USER_SERVICE_ADDR
              value: "user-service.postic.svc.cluster.local:50051"
            - name: UPLOAD_SERVICE_ADDR
              value: "upload-service.postic.svc.cluster.local:50052"
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: postic
spec:
  ports:
    - port: 80
      targetPort: 80
      name: http
  selector:
    app: gateway
  type: ClusterIP
